// Code generated by asm2asm, DO NOT EDIT.

package neon

import (
	`github.com/bytedance/sonic/loader`
)

const (
    _entry__f32toa = 28032
    _entry__format_significand = 30776
    _entry__f64toa = 96
    _entry__format_integer = 2456
    _entry__fsm_exec = 16512
    _entry__do_skip_number = 18868
    _entry__advance_string = 12824
    _entry__advance_string_default = 32152
    _entry__get_by_path = 24192
    _entry__skip_one_fast = 20212
    _entry__unescape = 33212
    _entry__unhex16_is = 8352
    _entry__html_escape = 8480
    _entry__i64toa = 2840
    _entry__u64toa = 3120
    _entry__lspace = 16
    _entry__quote = 4564
    _entry__skip_array = 16480
    _entry__skip_number = 19904
    _entry__skip_object = 18608
    _entry__skip_one = 20128
    _entry__unquote = 6044
    _entry__validate_one = 20176
    _entry__validate_utf8 = 26864
    _entry__validate_utf8_fast = 27520
    _entry__value = 11404
    _entry__vnumber = 14352
    _entry__atof_eisel_lemire64 = 9576
    _entry__atof_native = 10708
    _entry__decimal_to_f64 = 9836
    _entry__left_shift = 31232
    _entry__right_shift = 31756
    _entry__vsigned = 15756
    _entry__vstring = 12684
    _entry__vunsigned = 16124
)

const (
    _stack__f32toa = 0
    _stack__format_significand = 0
    _stack__f64toa = 64
    _stack__format_integer = 0
    _stack__fsm_exec = 192
    _stack__do_skip_number = 48
    _stack__advance_string = 0
    _stack__advance_string_default = 0
    _stack__get_by_path = 320
    _stack__skip_one_fast = 80
    _stack__unescape = 80
    _stack__unhex16_is = 0
    _stack__html_escape = 16
    _stack__i64toa = 16
    _stack__u64toa = 0
    _stack__lspace = 0
    _stack__quote = 0
    _stack__skip_array = 192
    _stack__skip_number = 96
    _stack__skip_object = 64
    _stack__skip_one = 192
    _stack__unquote = 128
    _stack__validate_one = 192
    _stack__validate_utf8 = 32
    _stack__validate_utf8_fast = 16
    _stack__value = 336
    _stack__vnumber = 240
    _stack__atof_eisel_lemire64 = 0
    _stack__atof_native = 128
    _stack__decimal_to_f64 = 64
    _stack__left_shift = 0
    _stack__right_shift = 0
    _stack__vsigned = 0
    _stack__vstring = 64
    _stack__vunsigned = 0
)

const (
    _size__f32toa = 2744
    _size__format_significand = 456
    _size__f64toa = 2360
    _size__format_integer = 384
    _size__fsm_exec = 2264
    _size__do_skip_number = 1036
    _size__advance_string = 1528
    _size__advance_string_default = 1060
    _size__get_by_path = 3328
    _size__skip_one_fast = 2220
    _size__unescape = 836
    _size__unhex16_is = 128
    _size__html_escape = 1096
    _size__i64toa = 280
    _size__u64toa = 1444
    _size__lspace = 80
    _size__quote = 1480
    _size__skip_array = 32
    _size__skip_number = 208
    _size__skip_object = 0
    _size__skip_one = 84
    _size__unquote = 2308
    _size__validate_one = 0
    _size__validate_utf8 = 0
    _size__validate_utf8_fast = 512
    _size__value = 1420
    _size__vnumber = 1772
    _size__atof_eisel_lemire64 = 260
    _size__atof_native = 696
    _size__decimal_to_f64 = 872
    _size__left_shift = 524
    _size__right_shift = 396
    _size__vsigned = 0
    _size__vstring = 0
    _size__vunsigned = 340
)

var (
    _pcsp__f32toa = [][2]uint32{
        {2744, 0},
    }
    _pcsp__format_significand = [][2]uint32{
        {456, 0},
    }
    _pcsp__f64toa = [][2]uint32{
        {1, 0},
        {564, 64},
        {568, 0},
        {1404, 64},
        {1408, 0},
        {1548, 64},
        {1552, 0},
        {1628, 64},
        {1632, 0},
        {2008, 64},
        {2012, 0},
        {2268, 64},
        {2272, 0},
        {2320, 64},
        {2324, 0},
        {2360, 64},
    }
    _pcsp__format_integer = [][2]uint32{
        {384, 0},
    }
    _pcsp__fsm_exec = [][2]uint32{
        {1, 0},
        {1448, 128},
        {1452, 0},
        {2128, 128},
        {2216, 192},
        {2220, 128},
        {2256, 192},
        {2264, 128},
    }
    _pcsp__do_skip_number = [][2]uint32{
        {944, 0},
        {1028, 48},
        {1036, 0},
    }
    _pcsp__advance_string = [][2]uint32{
        {1528, 0},
    }
    _pcsp__advance_string_default = [][2]uint32{
        {1060, 0},
    }
    _pcsp__get_by_path = [][2]uint32{
        {1, 0},
        {2628, 128},
        {2632, 0},
        {2672, 128},
        {3280, 160},
        {3284, 128},
        {3300, 160},
        {3304, 128},
        {3320, 160},
        {3328, 128},
    }
    _pcsp__skip_one_fast = [][2]uint32{
        {1, 0},
        {264, 80},
        {268, 0},
        {288, 80},
        {292, 0},
        {544, 80},
        {548, 0},
        {580, 80},
        {584, 0},
        {624, 80},
        {628, 0},
        {2212, 80},
        {2216, 0},
    }
    _pcsp__unescape = [][2]uint32{
        {1, 0},
        {96, 80},
        {100, 0},
        {136, 80},
        {140, 0},
        {180, 80},
        {184, 0},
        {280, 80},
        {284, 0},
        {492, 80},
        {496, 0},
        {552, 80},
        {556, 0},
        {716, 80},
        {720, 0},
        {824, 80},
        {832, 0},
    }
    _pcsp__unhex16_is = [][2]uint32{
        {128, 0},
    }
    _pcsp__html_escape = [][2]uint32{
        {1, 0},
        {1032, 16},
        {1036, 0},
        {1064, 16},
        {1068, 0},
        {1088, 16},
        {1096, 0},
    }
    _pcsp__i64toa = [][2]uint32{
        {1, 0},
        {160, 16},
        {164, 0},
        {212, 16},
        {216, 0},
        {236, 16},
        {240, 0},
        {264, 16},
        {268, 0},
        {272, 16},
        {280, 0},
    }
    _pcsp__u64toa = [][2]uint32{
        {1444, 0},
    }
    _pcsp__lspace = [][2]uint32{
        {80, 0},
    }
    _pcsp__quote = [][2]uint32{
        {1480, 0},
    }
    _pcsp__skip_array = [][2]uint32{
        {32, 0},
    }
    _pcsp__skip_number = [][2]uint32{
        {1, 0},
        {136, 48},
        {140, 0},
        {164, 48},
        {168, 0},
        {192, 48},
        {200, 0},
    }
    _pcsp__skip_object = [][2]uint32{
        {1, 0},
    }
    _pcsp__skip_one = [][2]uint32{
        {84, 0},
    }
    _pcsp__unquote = [][2]uint32{
        {1, 0},
        {1616, 128},
        {1620, 0},
        {2308, 128},
    }
    _pcsp__validate_one = [][2]uint32{
        {1, 0},
    }
    _pcsp__validate_utf8 = [][2]uint32{
        {1, 0},
    }
    _pcsp__validate_utf8_fast = [][2]uint32{
        {1, 0},
        {488, 16},
        {492, 0},
        {504, 16},
        {512, 0},
    }
    _pcsp__value = [][2]uint32{
        {1, 0},
        {344, 96},
        {348, 0},
        {1280, 96},
        {1380, 160},
        {1384, 96},
        {1412, 160},
        {1420, 96},
    }
    _pcsp__vnumber = [][2]uint32{
        {1, 0},
        {780, 112},
        {784, 0},
        {1772, 112},
    }
    _pcsp__atof_eisel_lemire64 = [][2]uint32{
        {260, 0},
    }
    _pcsp__atof_native = [][2]uint32{
        {1, 0},
        {688, 64},
        {696, 0},
    }
    _pcsp__decimal_to_f64 = [][2]uint32{
        {1, 0},
        {120, 64},
        {124, 0},
        {872, 64},
    }
    _pcsp__left_shift = [][2]uint32{
        {524, 0},
    }
    _pcsp__right_shift = [][2]uint32{
        {396, 0},
    }
    _pcsp__vsigned = [][2]uint32{
        {1, 0},
    }
    _pcsp__vstring = [][2]uint32{
        {1, 0},
    }
    _pcsp__vunsigned = [][2]uint32{
        {328, 0},
    }
)

var Funcs = []loader.CFunc{
    {"__native_entry__", 0, 67, 0, nil},
    {"_f32toa", _entry__f32toa, _size__f32toa, _stack__f32toa, _pcsp__f32toa},
    {"_format_significand", _entry__format_significand, _size__format_significand, _stack__format_significand, _pcsp__format_significand},
    {"_f64toa", _entry__f64toa, _size__f64toa, _stack__f64toa, _pcsp__f64toa},
    {"_format_integer", _entry__format_integer, _size__format_integer, _stack__format_integer, _pcsp__format_integer},
    {"_fsm_exec", _entry__fsm_exec, _size__fsm_exec, _stack__fsm_exec, _pcsp__fsm_exec},
    {"_do_skip_number", _entry__do_skip_number, _size__do_skip_number, _stack__do_skip_number, _pcsp__do_skip_number},
    {"_advance_string", _entry__advance_string, _size__advance_string, _stack__advance_string, _pcsp__advance_string},
    {"_advance_string_default", _entry__advance_string_default, _size__advance_string_default, _stack__advance_string_default, _pcsp__advance_string_default},
    {"_get_by_path", _entry__get_by_path, _size__get_by_path, _stack__get_by_path, _pcsp__get_by_path},
    {"_skip_one_fast", _entry__skip_one_fast, _size__skip_one_fast, _stack__skip_one_fast, _pcsp__skip_one_fast},
    {"_unescape", _entry__unescape, _size__unescape, _stack__unescape, _pcsp__unescape},
    {"_unhex16_is", _entry__unhex16_is, _size__unhex16_is, _stack__unhex16_is, _pcsp__unhex16_is},
    {"_html_escape", _entry__html_escape, _size__html_escape, _stack__html_escape, _pcsp__html_escape},
    {"_i64toa", _entry__i64toa, _size__i64toa, _stack__i64toa, _pcsp__i64toa},
    {"_u64toa", _entry__u64toa, _size__u64toa, _stack__u64toa, _pcsp__u64toa},
    {"_lspace", _entry__lspace, _size__lspace, _stack__lspace, _pcsp__lspace},
    {"_quote", _entry__quote, _size__quote, _stack__quote, _pcsp__quote},
    {"_skip_array", _entry__skip_array, _size__skip_array, _stack__skip_array, _pcsp__skip_array},
    {"_skip_number", _entry__skip_number, _size__skip_number, _stack__skip_number, _pcsp__skip_number},
    {"_skip_object", _entry__skip_object, _size__skip_object, _stack__skip_object, _pcsp__skip_object},
    {"_skip_one", _entry__skip_one, _size__skip_one, _stack__skip_one, _pcsp__skip_one},
    {"_unquote", _entry__unquote, _size__unquote, _stack__unquote, _pcsp__unquote},
    {"_validate_one", _entry__validate_one, _size__validate_one, _stack__validate_one, _pcsp__validate_one},
    {"_validate_utf8", _entry__validate_utf8, _size__validate_utf8, _stack__validate_utf8, _pcsp__validate_utf8},
    {"_validate_utf8_fast", _entry__validate_utf8_fast, _size__validate_utf8_fast, _stack__validate_utf8_fast, _pcsp__validate_utf8_fast},
    {"_value", _entry__value, _size__value, _stack__value, _pcsp__value},
    {"_vnumber", _entry__vnumber, _size__vnumber, _stack__vnumber, _pcsp__vnumber},
    {"_atof_eisel_lemire64", _entry__atof_eisel_lemire64, _size__atof_eisel_lemire64, _stack__atof_eisel_lemire64, _pcsp__atof_eisel_lemire64},
    {"_atof_native", _entry__atof_native, _size__atof_native, _stack__atof_native, _pcsp__atof_native},
    {"_decimal_to_f64", _entry__decimal_to_f64, _size__decimal_to_f64, _stack__decimal_to_f64, _pcsp__decimal_to_f64},
    {"_left_shift", _entry__left_shift, _size__left_shift, _stack__left_shift, _pcsp__left_shift},
    {"_right_shift", _entry__right_shift, _size__right_shift, _stack__right_shift, _pcsp__right_shift},
    {"_vsigned", _entry__vsigned, _size__vsigned, _stack__vsigned, _pcsp__vsigned},
    {"_vstring", _entry__vstring, _size__vstring, _stack__vstring, _pcsp__vstring},
    {"_vunsigned", _entry__vunsigned, _size__vunsigned, _stack__vunsigned, _pcsp__vunsigned},
}
